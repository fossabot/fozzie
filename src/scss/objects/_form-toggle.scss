/**
 * Objects > Form Toggle
 * =================================
 * Styles a button on top of a checkbox, to toggle inputs to a form
 *
 * Example: Search page filters (sidebar)
 *
 * The `o-formToggle` object is an optional mixin within Fozzie.
 * If you'd like to use it in your project you can include it by adding `@include formToggle();` into your SCSS dependencies file.
 *
 * Documentation:
 * TBC
 */

$formToggle-padding                 : spacing() !default;
$formToggle-border-color            : $grey--lightest;
$formToggle-border-color-interact   : $grey--lighter;
$formToggle-border-color-checked    : $green;
$formToggle-border-width            : 1px;
$formToggle-border-radius           : 8px;
$formToggle-icon-background         : $green;
$formToggle-icon-hover-background   : $grey--lighter;
$formToggle-background              : $white;
$formToggle-large-size              : 48px;
$formToggle-button-color            : $blue;
$formToggle-button-background       : $blue--offWhite;
$formToggle-disabled-text           : $grey--lighter;
$formToggle-checked-text            : $green;

// associated form toggle mixins

@mixin formToggle-checkedSpacing() {
    padding-left: 20px;
    font-weight: $font-weight-bold;
}

@mixin formToggle-border() {
    cursor: pointer;
    //the &:after is to create a border that sits over the top of the parents,
    // it creates a visual state on the parent without the need for a JS class toggle
    &:after {
        content: '';
        top: -1px;
        left: -1px;
        display: block;
        position: absolute;
    }
}

// `formToggle-hoverState` is used only when a formToggle has a user interaction :hover
@mixin formToggle-hoverState() {
    @include formToggle-border();
    &:after {
        width: calc(100% + 2px);
        height: calc(100% + 2px);
        border-radius: $formToggle-border-radius;
        border: $formToggle-border-width solid $formToggle-border-color-interact;
    }
}

// `formToggle-hoverState` is used only when a formToggle has a user interaction: :focus
@mixin formToggle-focusState() {
    @include formToggle-border();
    &:after {
        @extend %u-elementFocus;
        left: 1px;
        top: 1px;
        width: calc(100% - 2px);
        height: calc(100% - 2px);
        border-radius: $formToggle-border-radius;
        border: $formToggle-border-width solid $formToggle-border-color-interact;
    }
}

@mixin formToggle-checkedState() {
    @include formToggle-border();
    // for `formToggle-checkedState` we double the size of the element and scale by
    // 0.5 to make a 0.5px border render for the checked state
    &:after {
        width: calc(200% + 4px);
        height: calc(200% + 4px);
        border-radius: ($formToggle-border-radius * 2);
        border: $formToggle-border-width solid $formToggle-border-color-checked;
        transform: scale(0.5) translate(-50%, -50%);
    }
}

@mixin formToggle-iconActive() {
    opacity: 1;
    transform: rotate(0) scale(1);
}

@mixin formToggle() {

    .o-formToggle {
        position: relative;
        display: inline-block;
        margin-bottom: spacing();
        border-radius: $formToggle-border-radius;
        padding: ($formToggle-padding / 2) $formToggle-padding;
        border: $formToggle-border-width solid $formToggle-border-color;

        @include media('>=mid') {
            background: $formToggle-background;
        }
    }

        .o-formToggle--button {
            margin: 0;
            padding: 0 spacing(x4);
            color: $formToggle-button-color;
            background: $formToggle-button-background;
            border-color: $formToggle-button-background;
        }

        .o-formToggle--buttonIcon {
            width: 30px;
            height: 30px;
            display: inline-block;
            fill: $formToggle-button-color;
        }

        .o-formToggle--fullWidth {
            width: 100%;
            display: block;

            @include media('>=mid') {
                display: inline-block;
            }
        }

        .o-formToggle--fullWidthAboveMid {
            @include media('>=mid') {
                width: 100%;
            }
        }

        .o-formToggle--withBg {
            background: $formToggle-background;
        }

        .o-formToggle--withImage {
            float: left;
            overflow: hidden;
            margin-bottom: spacing(x2);
            width: calc(50% - #{spacing()});
            padding: 63px $formToggle-padding ($formToggle-padding * 0.5);

            &:nth-of-type(even) {
                margin-left: spacing(x2);
            }

            .o-formToggle-container {
                position: absolute;
                top: -($formToggle-padding / 2);
                left: -$formToggle-padding;
                max-height: 64px;
                height: 64px;
                overflow: hidden;
            }
        }

        .o-formToggle--midInline {
            @include media('<=mid') {
                min-width: 150px;
                margin: 0 spacing() 0 0;

                &:nth-child(even) {
                    margin-left: 0;
                }
            }
        }

        .o-formToggle--mediumSized {
            padding: $formToggle-padding ($formToggle-padding * 1.5);
        }

        .o-formToggle-text {
            width: 100%;
            display: block;
            transition: padding 100ms ease-in-out;

            @include media('>=mid') {
                transition-duration: 200ms;
            }

            // This before is to increase the click area to the formToggle parent.
            &:before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                display: block;
            }

            .o-formToggle-input:checked ~ & {
                font-weight: $font-weight-bold;
                color: $formToggle-checked-text;
                @include formToggle-checkedSpacing();
            }

            .o-formToggle-input:not(:disabled):hover ~ &,
            .o-formToggle-input:not(:disabled):focus ~ & {
                @include media('>=mid') {
                    @include formToggle-checkedSpacing();
                }
            }

            .o-formToggle:not(.o-formToggle--disabled):hover & {
                @include media('>=mid') {
                    @include formToggle-hoverState();
                }
            }

            .o-formToggle:not(.o-formToggle--disabled):focus & {
                @include media('>=mid') {
                    @include formToggle-focusState();
                }
            }

            .o-formToggle-input:not([disabled]):hover ~ &,
            .o-formToggle-input:not(:disabled):hover ~ & {
                @include formToggle-hoverState();
            }

            .o-formToggle-input:not([disabled]):focus ~ &,
            .o-formToggle-input:not(:disabled):focus ~ & {
                @include formToggle-focusState();
            }


            .o-formToggle-input:not([disabled]):checked ~ &,
            .o-formToggle-input:not(:disabled):checked ~ & {
                @include formToggle-checkedState();
            }
        }

        .o-formToggle-icon {
            //TODO - remove target / styling of SVG when inline-helper allows us to add class
            svg {
                top: 50%;
                opacity: 0;
                width: 16px;
                height: 10px;
                position: absolute;
                margin-top: -4px;
                left: spacing();
                display: inline-block;
                transform: rotate(-45deg) scale(0.5);
                transition: transform 200ms ease, opacity 250ms ease;
                fill: $formToggle-icon-background;

                .o-formToggle--withImage & {
                    top: auto;
                    margin-top: 4px;
                }

                .o-formToggle-input:not([disabled]):hover ~ &,
                .o-formToggle-input:not([checked]):hover ~ &,
                .o-formToggle-input:not([disabled]):focus ~ &,
                .o-formToggle-input:not([checked]):focus ~ & {
                    @include media('>=mid') {
                        fill: $formToggle-icon-hover-background;
                    }
                }

                .o-formToggle-input:checked ~ & {
                    @include formToggle-iconActive();

                    &:hover,
                    &:focus {
                        fill: $formToggle-icon-background;
                    }
                }

                .o-formToggle-input:not(:disabled):focus ~ &,
                .o-formToggle-input:not(:disabled):hover ~ & {
                    @include media('>=mid') {
                        @include formToggle-iconActive();
                    }
                }
            }
        }

        .o-formToggle--disabled {
            background: none;
            color: $formToggle-disabled-text;
        }
}
